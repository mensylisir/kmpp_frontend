podTemplate(containers: [
    containerTemplate(name: 'jnlp', image: 'harbor.dev.rdev.tech/library/jenkins/slave_nodejs:v1.0.5_alpha', ttyEnabled: true)
  ],
    volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
                hostPathVolume(hostPath: '/usr/bin/docker', mountPath: '/usr/bin/docker'),
                hostPathVolume(hostPath: '/usr/bin/kubectl', mountPath: '/usr/bin/kubectl')]) {
node(POD_LABEL) {
    stage('Get Code') {
            git  credentialsId: 'yhc_ssh', url: 'ssh://git@gitlab.dev.rdev.tech:10022/kmpp/kmpp_frontend.git', branch: 'master'
        }
    stage('Build Project') {
            sh "npm config set registry http://192.168.81.101:8081/repository/npm-g/"
            sh "npm install"
            sh "npm run build"
    }
    stage('Sonar Scanner'){
            sh "sonar-scanner -X "+
                "-Dsonar.host.url=http://192.168.80.49:30001 " +
                "-Dsonar.login=0f4af2d9b8e72cb2f7fac188b08123fae76ec63c " +
                "-Dsonar.language=js " + 
                "-Dsonar.projectKey=kmpp_frontend-master " + 
                "-Dsonar.projectName=kmpp_frontend-master " + 
                "-Dsonar.projectVersion=$BUILD_NUMBER " + 
                "-Dsonar.sources=. " + 
                "-Dsonar.sourceEncoding=UTF-8 " + 
                "-Dsonar.java.binaries=."
       }
    stage('Build Docker image kmpp_frontend-master'){
            sh  """
                pwd
                ls
                mkdir -p bak
                cp -r dist/ bak/
                cd bak/
                cp ../Dockerfile .
                cp ../default.conf .
                docker login -u admin -pDef@u1tpwd harbor.dev.rdev.tech
                docker build -t harbor.dev.rdev.tech/kmpp/kmpp_frontend-master:$BUILD_NUMBER .
                docker push harbor.dev.rdev.tech/kmpp/kmpp_frontend-master:$BUILD_NUMBER
                docker rmi harbor.dev.rdev.tech/kmpp/kmpp_frontend-master:$BUILD_NUMBER
                """
        }
    }
}